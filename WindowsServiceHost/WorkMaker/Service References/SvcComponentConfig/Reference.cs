//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WorkMaker.SvcComponentConfig {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="DKK.WindowsServiceComponentConfig.v1", ConfigurationName="SvcComponentConfig.ISvcComponentConfig")]
    public interface ISvcComponentConfig {
        
        [System.ServiceModel.OperationContractAttribute(Action="DKK.WindowsServiceComponentConfig.v1/ISvcComponentConfig/GetEnvironments", ReplyAction="DKK.WindowsServiceComponentConfig.v1/ISvcComponentConfig/GetEnvironmentsResponse")]
        System.Collections.Generic.List<string> GetEnvironments();
        
        [System.ServiceModel.OperationContractAttribute(Action="DKK.WindowsServiceComponentConfig.v1/ISvcComponentConfig/GetEnvironments", ReplyAction="DKK.WindowsServiceComponentConfig.v1/ISvcComponentConfig/GetEnvironmentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetEnvironmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="DKK.WindowsServiceComponentConfig.v1/ISvcComponentConfig/GetEnvironmentConfig", ReplyAction="DKK.WindowsServiceComponentConfig.v1/ISvcComponentConfig/GetEnvironmentConfigResp" +
            "onse")]
        System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, string>> GetEnvironmentConfig(string environment);
        
        [System.ServiceModel.OperationContractAttribute(Action="DKK.WindowsServiceComponentConfig.v1/ISvcComponentConfig/GetEnvironmentConfig", ReplyAction="DKK.WindowsServiceComponentConfig.v1/ISvcComponentConfig/GetEnvironmentConfigResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, string>>> GetEnvironmentConfigAsync(string environment);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISvcComponentConfigChannel : WorkMaker.SvcComponentConfig.ISvcComponentConfig, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SvcComponentConfigClient : System.ServiceModel.ClientBase<WorkMaker.SvcComponentConfig.ISvcComponentConfig>, WorkMaker.SvcComponentConfig.ISvcComponentConfig {
        
        public SvcComponentConfigClient() {
        }
        
        public SvcComponentConfigClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SvcComponentConfigClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SvcComponentConfigClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SvcComponentConfigClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<string> GetEnvironments() {
            return base.Channel.GetEnvironments();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetEnvironmentsAsync() {
            return base.Channel.GetEnvironmentsAsync();
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, string>> GetEnvironmentConfig(string environment) {
            return base.Channel.GetEnvironmentConfig(environment);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, string>>> GetEnvironmentConfigAsync(string environment) {
            return base.Channel.GetEnvironmentConfigAsync(environment);
        }
    }
}
